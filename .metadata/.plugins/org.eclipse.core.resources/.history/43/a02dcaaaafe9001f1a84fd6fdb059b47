/*
 * diagnose.c
 *
 *  Created on: Feb 11, 2025
 *      Author: rhett
 */

#include <stm32f7xx.h>
#include <string.h>
#include <stdio.h>
#include "diagnose.h"
#include "OBD_Debug.h"
#include "OBD2.h"
#include "ui.h"
#include "lvgl.h"

extern lv_display_t* display;

void decode_dtc(uint16_t dtc, char* result) {
	char classLookUp[] = {'P', 'C', 'B', 'U'};
	char digLookUp[] = {'0', '1', '2', '3'};

	uint8_t upperTwoBits = DTC_GET_UPPER_TWO_BITS(dtc);
	uint16_t A5A4 = DTC_GET_A5_A4_BITS(dtc);
	result[0] = classLookUp[upperTwoBits];
	result[1] = digLookUp[A5A4];
	sprintf(result + strlen(result), "%X", DTC_GET_CODE_NUM(dtc));
}

void display_dtcs(OBDBus* bus) {
	// clear the textarea from previous use
	lv_textarea_set_text(objects.diagnose_textarea, "");
	lv_refr_now(display);
	uint8_t response[4] = {0};

	if (obd2_get_dtcs(bus, response) != HAL_OK) {
		lv_textarea_add_text(objects.diagnose_textarea, "#FF0000 ERROR#: DTC request failed\n DEBUG LOG:\n");
		char* log = get_debug_log();
		lv_textarea_add_text(objects.diagnose_textarea, get_debug_log());
		return;
	}

	if ((response[0] == 0) && (response[1] == 0)) {
		lv_textarea_add_text(objects.diagnose_textarea, "#00FF00 NO DTCs FOUND#\n");
	}

	for (int i = 0; i < sizeof(response) / sizeof(uint16_t); i++) {
		char dtcStr[DTC_CODE_STRING_LEN];
		if ((response[i] == 0) && (response[i + 1] == 0)) {
			break;
		} else {
			uint16_t dtc = ((uint16_t) response[i] << 8) | response[i + 1];
			char message[DTC_CODE_FOUND_MSG_MAX_LEN];
			decode_dtc(dtc, dtcStr);
			sprintf(message, "#FF0000 CODE FOUND# - %s\n", dtcStr);
			lv_textarea_add_text(objects.diagnose, message);
		}
	}
}
