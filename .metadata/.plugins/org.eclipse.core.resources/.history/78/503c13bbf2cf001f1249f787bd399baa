/*
 * OBD2.c
 *
 *  Created on: Jan 11, 2025
 *      Author: rhett
 */

#include <stm32f7xx.h>
#include "OBD2.h"

extern UART_HandleTypeDef huart4;

HAL_StatusTypeDef iso9141_init(void) {
	HAL_GPIO_WritePin(GPIOC, ISO9141_K, 1);
	HAL_Delay(3000); //must be no traffic on bus for 3 seconds after K goes high
	HAL_GPIO_WritePin(GPIOC, ISO9141_K, 0); // start bit
	HAL_Delay(200);
	HAL_GPIO_WritePin(GPIOC, ISO9141_K, 1);
	HAL_Delay(400);
	HAL_GPIO_WritePin(GPIOC, ISO9141_K, 0);
	HAL_Delay(400);
	HAL_GPIO_WritePin(GPIOC, ISO9141_K, 1);
	HAL_Delay(400);
	HAL_GPIO_WritePin(GPIOC, ISO9141_K, 0);
	HAL_Delay(400);
	HAL_GPIO_WritePin(GPIOC, ISO9141_K, 1);
	HAL_Delay(100);
	return HAL_OK;
}

HAL_StatusTypeDef iso9141_get_init_response(InitResponse* response) {
	if (HAL_UART_Receive(&huart4, &response->synchro, sizeof(uint8_t), W1_TIMEOUT_MAX) != HAL_OK) {
		return HAL_ERROR;
	}
	if (HAL_UART_Receive(&huart4, &response->keyWord1, sizeof(uint8_t), W2_TIMEOUT_MAX) != HAL_OK) {
		return HAL_ERROR;
	}
	if (HAL_UART_Receive(&huart4, &response->keyWord2, sizeof(uint8_t), W3_TIMEOUT_MAX) != HAL_OK) {
		return HAL_ERROR;
	}
	return HAL_OK;
}

HAL_StatusTypeDef iso9141_listen(void) {
	InitResponse response;

	if (iso9141_get_init_response(&response) != HAL_OK) {
		return HAL_ERROR;
	}
	if ((response.keyWord1 != ISO9141_KW1) || (response.keyWord2 != ISO9141_KW2)) {
		return HAL_ERROR;
	}
	HAL_Delay(30);
	uint8_t nKeyWord2 = ~response.keyWord2;
	uint8_t nAddress;

	HAL_UART_Transmit(&huart4, &nKeyWord2, sizeof(uint8_t), 100);
	if (HAL_UART_Transmit(&huart4, &nAddress, sizeof(uint8_t), W4_TIMEOUT_MAX) != HAL_OK) {
		return HAL_ERROR;
	}
	if (nAddress != ~ISO9141_ADDRESS) {
		return HAL_ERROR;
	}
	// all ECU responses were as expected, the bus is now active
	return HAL_OK;
}

HAL_StatusTypeDef iso9141_send(uint8_t* data, uint32_t size) {
	return HAL_UART_Transmit(&huart4, data, size, 100);
}

HAL_StatusTypeDef obd2_get_parameter(uint8_t protocol, )
