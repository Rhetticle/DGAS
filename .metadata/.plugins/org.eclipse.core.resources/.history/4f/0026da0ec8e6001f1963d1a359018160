/*
 * selftest.c
 *
 *  Created on: Feb 9, 2025
 *      Author: rhett
 */

#include <stm32f7xx.h>
#include "selftest.h"

extern SDRAM_HandleTypeDef hsdram1;

HAL_StatusTypeDef dram_test(void) {
	// we should not use pointers here as if DRAM is not ok we will segfault (go to hard fault handler)
	uint16_t readTest;

	// test we can read entire memory array
	for (uint32_t i = 0; i < SDRAM_SIZE; i++) {
		if (HAL_SDRAM_Read_16b(&hsdram1, i, &test, sizeof(uint16_t)) != HAL_OK) {
			return HAL_OK;
		}
	}
	uint16_t writeTest = SDRAM_WRITE_TEST_BYTE;
	// test we can write and then read what was written (
	if (HAL_SDRAM_Write_16b(&hsdram1, SDRAM_TEST_ADDR - SDRAM_START_ADDR, &writeTest, sizeof(uint16_t)) != HAL_OK) {
		return HAL_ERROR;
	}
	uint16_t readBack;
	if (HAL_SDRAM_Read_16b(&hsdram1, SDRAM_TEST_ADDR - SDRAM_START_ADDR, &readBack, sizeof(uint16_t)) != HAL_OK) {
		return HAL_ERROR;
	}
	if (readBack != writeTest) {
		return HAL_ERROR;
	}
	return HAL_OK;
}

// run a self test on peripherals (DRAM, flash, accelerometer)
void dgas_self_test(void) {

}
