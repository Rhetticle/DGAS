/*
 * buttons.c
 *
 *  Created on: Jan 28, 2025
 *      Author: rhett
 */

#include "ui.h"
#include "lvgl.h"
#include "buttons.h"
#include <stm32f7xx.h>

const lv_point_t btnPointsMenu[] = {{287, 240}, {287, 151}, {75, 240}, {174, 342}};

static lv_group_t* btnGroup;

int get_btn_id(void) {
	if (HAL_GPIO_ReadPin(GPIOB, BTN_SEL) == 0) {
		return 0;
	}
	return -1;
}

void btn_read(lv_indev_t * indev, lv_indev_data_t * data)
{
	static uint32_t last_btn = 0;   /* Store the last pressed button */
	int btn_pr = get_btn_id();     /* Get the ID (0,1,2...) of the pressed button */
	if(btn_pr >= 0) {               /* Is there a button press? (E.g. -1 indicated no button was pressed) */
	    last_btn = btn_pr;           /* Save the ID of the pressed button */
	    data->state = LV_INDEV_STATE_PRESSED;  /* Set the pressed state */
	} else {
		data->state = LV_INDEV_STATE_RELEASED; /* Set the released state */
	}
	data->point = btnPointsMenu[1];
	data->btn_id = last_btn;         /* Save the last button */
}

void init_buttons(lv_indev_t* indev) {
	lv_indev_set_type(indev, LV_INDEV_TYPE_BUTTON);
	lv_indev_set_read_cb(indev, btn_read);
	lv_indev_set_button_points(indev, btnPointsMenu);
	btnGroup = lv_group_create();
	lv_indev_set_group(indev, btnGroup);
	lv_group_add_obj(btnGroup, objects.obj16);
	lv_group_add_obj(btnGroup, objects.obj17);
	lv_group_add_obj(btnGroup, objects.obj18);
	lv_group_add_obj(btnGroup, objects.obj19);
	lv_group_set_default(btnGroup);
	lv_group_focus_obj(objects.obj19);
}
