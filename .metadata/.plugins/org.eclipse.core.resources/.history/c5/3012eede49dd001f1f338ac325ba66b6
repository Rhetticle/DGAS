/*
 * buttons.c
 *
 *  Created on: Jan 28, 2025
 *      Author: rhett
 */

#include "ui.h"
#include "lvgl.h"
#include "buttons.h"
#include <stm32f7xx.h>

const lv_point_t btnPointsMenu[] = {{287, 240}, {287, 151}, {75, 240}, {174, 342}};

static lv_group_t* btnGroup;
static uint16_t navPressed = 0;

void HAL_GPIO_EXTI_Callback(uint16_t pin) {
	if (pin == BTN_NAV) {
		navPressed = 1;
	}
}

void enc_read(lv_indev_t* indev, lv_indev_data_t* data) {
	if (navPressed) {
		data->enc_diff += 1;
		navPressed = 0;
	}

	if (HAL_GPIO_ReadPin(GPIOB, BTN_SEL) == 0) {
		data->state = LV_INDEV_STATE_PRESSED;
	} else {
		data->state = LV_INDEV_STATE_RELEASED;
	}
}

void event_handler(lv_event_t* e) {
	lv_event_code_t code = lv_event_get_code(e);

	if (code == LV_EVENT_PRESSED || code == LV_EVENT_LONG_PRESSED) {
		lv_screen_load(objects.measure);
	}
}

void init_buttons(lv_indev_t* indev) {
	lv_indev_set_type(indev, LV_INDEV_TYPE_ENCODER);
	lv_indev_set_read_cb(indev, enc_read);
	lv_obj_add_event_cb(objects.obj16, event_handler, LV_EVENT_ALL, NULL);
	lv_group_t* btnGroup = lv_group_create();
	lv_indev_set_group(indev, btnGroup);
	lv_group_add_obj(btnGroup, objects.obj16);
	lv_group_add_obj(btnGroup, objects.obj17);
	lv_group_add_obj(btnGroup, objects.obj19);
	lv_group_add_obj(btnGroup, objects.obj18);
	lv_group_set_default(btnGroup);
	lv_group_focus_obj(objects.obj16);
}
